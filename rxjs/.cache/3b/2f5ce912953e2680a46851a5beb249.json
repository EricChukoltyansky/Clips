{"id":"../node_modules/rxjs/dist/esm5/internal/operators/find.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\src\\internal\\operators\\find.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\package.json","includedInParent":true,"mtime":1657193624370},{"name":"C:\\Appleseeds\\angular-project\\Clips\\.browserslistrc","includedInParent":true,"mtime":1655288118437},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"../util/lift","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41,"index":81},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFind = createFind;\nexports.find = find;\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction find(predicate, thisArg) {\n  return (0, _lift.operate)(createFind(predicate, thisArg, 'value'));\n}\n\nfunction createFind(predicate, thisArg, emit) {\n  var findIndex = emit === 'index';\n  return function (source, subscriber) {\n    var index = 0;\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      var i = index++;\n\n      if (predicate.call(thisArg, value, i, source)) {\n        subscriber.next(findIndex ? i : value);\n        subscriber.complete();\n      }\n    }, function () {\n      subscriber.next(findIndex ? -1 : undefined);\n      subscriber.complete();\n    }));\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":13,"column":0}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":65,"column":16},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":13,"column":14}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":13,"column":23}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":67,"column":2},"generated":{"line":13,"column":25}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":13,"column":32}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":67,"column":15},"generated":{"line":13,"column":34}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":14,"column":2}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":14,"column":13}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":14,"column":26}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":17},"generated":{"line":14,"column":28}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":27},"generated":{"line":14,"column":38}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":28},"generated":{"line":14,"column":39}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":27},"generated":{"line":14,"column":48}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":39},"generated":{"line":14,"column":50}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":27},"generated":{"line":14,"column":57}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":48},"generated":{"line":14,"column":59}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":27},"generated":{"line":14,"column":66}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":14,"column":67}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":14,"column":68}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":70,"column":1},"generated":{"line":15,"column":0}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":17,"column":0}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":17,"column":9}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":17,"column":19}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":20}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":17,"column":29}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":17,"column":31}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":17,"column":38}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":17,"column":40}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":17,"column":44}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":75,"column":25},"generated":{"line":17,"column":46}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":18,"column":2}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":18,"column":6}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":17},"generated":{"line":18,"column":15}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":20},"generated":{"line":18,"column":18}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":24},"generated":{"line":18,"column":22}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":29},"generated":{"line":18,"column":27}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":77,"column":2},"generated":{"line":18,"column":34}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":10},"generated":{"line":19,"column":19}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":19,"column":25}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":33},"generated":{"line":19,"column":27}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":19,"column":37}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":60},"generated":{"line":19,"column":39}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":4},"generated":{"line":20,"column":4}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":8},"generated":{"line":20,"column":8}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":13},"generated":{"line":20,"column":13}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":16},"generated":{"line":20,"column":16}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":79,"column":4},"generated":{"line":20,"column":17}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":21,"column":4}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":10},"generated":{"line":21,"column":10}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":11},"generated":{"line":21,"column":11}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":21,"column":20}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":21,"column":21}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":21,"column":25}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":21,"column":69}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":21,"column":71}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":21,"column":81}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":21,"column":83}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":83,"column":9},"generated":{"line":21,"column":93}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":83,"column":8},"generated":{"line":21,"column":98}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":83,"column":14},"generated":{"line":21,"column":100}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":22,"column":6}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":84,"column":16},"generated":{"line":22,"column":10}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":84,"column":17},"generated":{"line":22,"column":11}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":84,"column":20},"generated":{"line":22,"column":14}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":84,"column":25},"generated":{"line":22,"column":19}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":84,"column":10},"generated":{"line":22,"column":21}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":24,"column":6}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":14},"generated":{"line":24,"column":10}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":23},"generated":{"line":24,"column":19}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":24},"generated":{"line":24,"column":20}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":14},"generated":{"line":24,"column":24}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":29},"generated":{"line":24,"column":25}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":14},"generated":{"line":24,"column":32}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":38},"generated":{"line":24,"column":34}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":14},"generated":{"line":24,"column":39}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":45},"generated":{"line":24,"column":41}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":14},"generated":{"line":24,"column":42}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":48},"generated":{"line":24,"column":44}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":14},"generated":{"line":24,"column":50}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":10},"generated":{"line":24,"column":51}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":85,"column":57},"generated":{"line":24,"column":53}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":25,"column":8}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":22},"generated":{"line":25,"column":18}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":23},"generated":{"line":25,"column":19}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":25,"column":23}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":28},"generated":{"line":25,"column":24}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":37},"generated":{"line":25,"column":33}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":40},"generated":{"line":25,"column":36}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":37},"generated":{"line":25,"column":37}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":44},"generated":{"line":25,"column":40}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":86,"column":12},"generated":{"line":25,"column":45}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":87,"column":12},"generated":{"line":26,"column":8}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":87,"column":22},"generated":{"line":26,"column":18}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":87,"column":23},"generated":{"line":26,"column":19}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":87,"column":12},"generated":{"line":26,"column":27}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":88,"column":11},"generated":{"line":27,"column":6}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":89,"column":9},"generated":{"line":28,"column":4}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":28,"column":5}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":90,"column":8},"generated":{"line":28,"column":7}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":90,"column":8},"generated":{"line":28,"column":19}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":10},"generated":{"line":29,"column":6}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":20},"generated":{"line":29,"column":16}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":21},"generated":{"line":29,"column":17}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":10},"generated":{"line":29,"column":21}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":26},"generated":{"line":29,"column":22}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":35},"generated":{"line":29,"column":31}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":38},"generated":{"line":29,"column":34}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":39},"generated":{"line":29,"column":35}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":35},"generated":{"line":29,"column":36}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":43},"generated":{"line":29,"column":39}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":91,"column":10},"generated":{"line":29,"column":48}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":92,"column":10},"generated":{"line":30,"column":6}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":92,"column":20},"generated":{"line":30,"column":16}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":92,"column":21},"generated":{"line":30,"column":17}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":92,"column":10},"generated":{"line":30,"column":25}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":93,"column":9},"generated":{"line":31,"column":4}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":81,"column":6},"generated":{"line":31,"column":5}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":31,"column":6}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":96,"column":3},"generated":{"line":32,"column":2}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":32,"column":3}},{"source":"../../../../src/internal/operators/find.ts","name":null,"original":{"line":97,"column":1},"generated":{"line":33,"column":0}}],"sources":{"../../../../src/internal/operators/find.ts":"import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"561f8b1ba611802c2031a1b559297678","cacheData":{"env":{}}}