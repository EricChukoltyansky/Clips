{"id":"../node_modules/rxjs/dist/esm5/internal/observable/empty.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\empty.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\src\\internal\\observable\\empty.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"../Observable","loc":{"line":1,"column":27,"index":27},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\empty.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EMPTY = void 0;\nexports.empty = empty;\n\nvar _Observable = require(\"../Observable\");\n\nvar EMPTY = new _Observable.Observable(function (subscriber) {\n  return subscriber.complete();\n});\nexports.EMPTY = EMPTY;\n\nfunction empty(scheduler) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler) {\n  return new _Observable.Observable(function (subscriber) {\n    return scheduler.schedule(function () {\n      return subscriber.complete();\n    });\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":7},"generated":{"line":11,"column":0}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":13},"generated":{"line":11,"column":4}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":18},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":21},"generated":{"line":11,"column":12}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":25},"generated":{"line":11,"column":16}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":21},"generated":{"line":11,"column":38}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":43},"generated":{"line":11,"column":39}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":44},"generated":{"line":11,"column":49}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":43},"generated":{"line":11,"column":59}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":54},"generated":{"line":11,"column":61}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":59},"generated":{"line":12,"column":2}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":59},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":69},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":70},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":59},"generated":{"line":12,"column":28}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":59},"generated":{"line":12,"column":30}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":80},"generated":{"line":13,"column":0}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":21},"generated":{"line":13,"column":1}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":66,"column":7},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":16,"column":0}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":73,"column":16},"generated":{"line":16,"column":9}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":16,"column":14}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":73,"column":22},"generated":{"line":16,"column":15}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":73,"column":6},"generated":{"line":16,"column":24}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":73,"column":47},"generated":{"line":16,"column":26}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":17,"column":18}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":21},"generated":{"line":17,"column":21}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":35},"generated":{"line":17,"column":35}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":36},"generated":{"line":17,"column":36}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":35},"generated":{"line":17,"column":45}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":17,"column":46}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":49},"generated":{"line":17,"column":49}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":74,"column":2},"generated":{"line":17,"column":54}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":75,"column":1},"generated":{"line":18,"column":0}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":77,"column":9},"generated":{"line":20,"column":9}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":20,"column":23}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":77,"column":24},"generated":{"line":20,"column":24}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":77,"column":0},"generated":{"line":20,"column":33}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":77,"column":48},"generated":{"line":20,"column":35}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":21,"column":2}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":21,"column":9}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":13},"generated":{"line":21,"column":13}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":21,"column":35}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":31},"generated":{"line":21,"column":36}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":32},"generated":{"line":21,"column":46}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":31},"generated":{"line":21,"column":56}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":42},"generated":{"line":21,"column":58}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":47},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":47},"generated":{"line":22,"column":11}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":56},"generated":{"line":22,"column":20}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":57},"generated":{"line":22,"column":21}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":47},"generated":{"line":22,"column":29}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":66},"generated":{"line":22,"column":30}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":66},"generated":{"line":22,"column":42}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":72},"generated":{"line":23,"column":6}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":72},"generated":{"line":23,"column":13}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":82},"generated":{"line":23,"column":23}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":83},"generated":{"line":23,"column":24}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":72},"generated":{"line":23,"column":32}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":72},"generated":{"line":23,"column":34}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":93},"generated":{"line":24,"column":4}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":47},"generated":{"line":24,"column":5}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":47},"generated":{"line":24,"column":6}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":94},"generated":{"line":25,"column":2}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":25,"column":3}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":25,"column":4}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":79,"column":1},"generated":{"line":26,"column":0}}],"sources":{"../../../../src/internal/observable/empty.ts":"import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n"},"lineCount":null}},"error":null,"hash":"3391650b13547f481ca7c23df34346a8","cacheData":{"env":{}}}