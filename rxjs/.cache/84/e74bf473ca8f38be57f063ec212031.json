{"id":"../node_modules/rxjs/dist/esm5/internal/operators/publishReplay.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\publishReplay.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\src\\internal\\operators\\publishReplay.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"../ReplaySubject","loc":{"line":1,"column":30,"index":30},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\publishReplay.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\ReplaySubject.js"},{"name":"./multicast","loc":{"line":2,"column":26,"index":76},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\publishReplay.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\multicast.js"},{"name":"../util/isFunction","loc":{"line":3,"column":27,"index":118},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\publishReplay.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.publishReplay = publishReplay;\n\nvar _ReplaySubject = require(\"../ReplaySubject\");\n\nvar _multicast = require(\"./multicast\");\n\nvar _isFunction = require(\"../util/isFunction\");\n\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {\n  if (selectorOrScheduler && !(0, _isFunction.isFunction)(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n\n  var selector = (0, _isFunction.isFunction)(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  return function (source) {\n    return (0, _multicast.multicast)(new _ReplaySubject.ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source);\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":14,"column":22}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":14,"column":23}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":14,"column":33}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":85,"column":2},"generated":{"line":14,"column":35}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":14,"column":45}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":86,"column":2},"generated":{"line":14,"column":47}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":14,"column":66}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":87,"column":2},"generated":{"line":14,"column":68}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":14,"column":85}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":87,"column":39},"generated":{"line":14,"column":87}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":6},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":25},"generated":{"line":15,"column":25}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":29},"generated":{"line":15,"column":29}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":30},"generated":{"line":15,"column":30}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":30},"generated":{"line":15,"column":34}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":30},"generated":{"line":15,"column":56}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":41},"generated":{"line":15,"column":58}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":30},"generated":{"line":15,"column":77}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":2},"generated":{"line":15,"column":78}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":89,"column":63},"generated":{"line":15,"column":80}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":90,"column":4},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":90,"column":21},"generated":{"line":16,"column":21}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":90,"column":24},"generated":{"line":16,"column":24}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":90,"column":4},"generated":{"line":16,"column":43}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":91,"column":3},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":19,"column":6}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":16},"generated":{"line":19,"column":14}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":19},"generated":{"line":19,"column":17}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":19},"generated":{"line":19,"column":21}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":19},"generated":{"line":19,"column":43}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":30},"generated":{"line":19,"column":45}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":19},"generated":{"line":19,"column":64}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":53},"generated":{"line":19,"column":68}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":19},"generated":{"line":19,"column":87}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":75},"generated":{"line":19,"column":90}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":92,"column":2},"generated":{"line":19,"column":99}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":2},"generated":{"line":20,"column":2}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":9},"generated":{"line":20,"column":9}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":10},"generated":{"line":20,"column":19}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":9},"generated":{"line":20,"column":25}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":31},"generated":{"line":20,"column":27}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":4}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":11}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":15}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":35}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":46},"generated":{"line":21,"column":37}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":50},"generated":{"line":21,"column":41}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":46},"generated":{"line":21,"column":69}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":67},"generated":{"line":21,"column":70}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":46},"generated":{"line":21,"column":80}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":79},"generated":{"line":21,"column":82}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":46},"generated":{"line":21,"column":92}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":91},"generated":{"line":21,"column":94}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":46},"generated":{"line":21,"column":111}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":112}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":111},"generated":{"line":21,"column":114}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":122}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":122},"generated":{"line":21,"column":124}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":130}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":36},"generated":{"line":21,"column":131}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":129},"generated":{"line":22,"column":2}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":95,"column":2},"generated":{"line":22,"column":3}},{"source":"../../../../src/internal/operators/publishReplay.ts","name":null,"original":{"line":96,"column":1},"generated":{"line":23,"column":0}}],"sources":{"../../../../src/internal/operators/publishReplay.ts":"import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n"},"lineCount":null}},"error":null,"hash":"4026f5d60e6663f53e2df34805a0cfae","cacheData":{"env":{}}}