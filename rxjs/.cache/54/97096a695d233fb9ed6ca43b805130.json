{"id":"../node_modules/rxjs/dist/esm5/internal/operators/map.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\map.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\src\\internal\\operators\\map.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\Clips\\.browserslistrc","includedInParent":true,"mtime":1655288118437},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"../util/lift","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\map.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":41,"index":81},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\map.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.map = map;\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction map(project, thisArg) {\n  return (0, _lift.operate)(function (source, subscriber) {\n    var index = 0;\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (value) {\n      subscriber.next(project.call(thisArg, value, index++));\n    }));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":12,"column":12}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":26},"generated":{"line":12,"column":13}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":67},"generated":{"line":12,"column":22}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":6},"generated":{"line":12,"column":29}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":48,"column":80},"generated":{"line":12,"column":31}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":13,"column":26}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":13,"column":28}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":13,"column":38}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":13,"column":44}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":26},"generated":{"line":13,"column":46}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":13,"column":56}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":36},"generated":{"line":13,"column":58}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":8},"generated":{"line":14,"column":8}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":13},"generated":{"line":14,"column":13}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":14,"column":16}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":14,"column":17}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":15,"column":4}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":54,"column":10},"generated":{"line":15,"column":10}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":54,"column":11},"generated":{"line":15,"column":11}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":15,"column":20}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":15,"column":25}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":15,"column":69}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":31},"generated":{"line":15,"column":71}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":15,"column":81}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":43},"generated":{"line":15,"column":83}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":44},"generated":{"line":15,"column":93}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":43},"generated":{"line":15,"column":98}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":52},"generated":{"line":15,"column":100}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":16,"column":6}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":19},"generated":{"line":16,"column":17}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":16,"column":21}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":16,"column":22}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":31},"generated":{"line":16,"column":29}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":32},"generated":{"line":16,"column":30}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":16,"column":34}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":37},"generated":{"line":16,"column":35}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":16,"column":42}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":46},"generated":{"line":16,"column":44}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":16,"column":49}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":53},"generated":{"line":16,"column":51}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":58},"generated":{"line":16,"column":56}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":24},"generated":{"line":16,"column":58}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":16,"column":59}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":59,"column":7},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":17,"column":5}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":17,"column":6}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":61,"column":3},"generated":{"line":18,"column":2}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":18,"column":3}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":19,"column":0}}],"sources":{"../../../../src/internal/operators/map.ts":"import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"28b27b0cc965b4c4e8154bddd2c615db","cacheData":{"env":{}}}