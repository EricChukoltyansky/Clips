{"id":"../node_modules/rxjs/dist/esm5/internal/operators/finalize.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\finalize.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\src\\internal\\operators\\finalize.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\Clips\\.browserslistrc","includedInParent":true,"mtime":1655288118437},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"../util/lift","loc":{"line":1,"column":24,"index":24},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\finalize.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.finalize = finalize;\n\nvar _lift = require(\"../util/lift\");\n\nfunction finalize(callback) {\n  return (0, _lift.operate)(function (source, subscriber) {\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":17}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":28},"generated":{"line":10,"column":18}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":10,"column":26}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":65,"column":48},"generated":{"line":10,"column":28}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":11,"column":13}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":11,"column":26}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":11,"column":28}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":18},"generated":{"line":11,"column":38}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":11,"column":44}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":26},"generated":{"line":11,"column":46}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":17},"generated":{"line":11,"column":56}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":36},"generated":{"line":11,"column":58}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":12,"column":8}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":12},"generated":{"line":13,"column":12}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":13},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":13,"column":22}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":23},"generated":{"line":13,"column":23}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":70,"column":6},"generated":{"line":13,"column":33}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":71,"column":5},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":69,"column":4},"generated":{"line":14,"column":5}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":71,"column":14},"generated":{"line":14,"column":14}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":15,"column":16}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":17},"generated":{"line":15,"column":17}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":20}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":21},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":15,"column":29}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":73,"column":5},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":74,"column":3},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":9},"generated":{"line":17,"column":3}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":66,"column":2},"generated":{"line":17,"column":4}},{"source":"../../../../src/internal/operators/finalize.ts","name":null,"original":{"line":75,"column":1},"generated":{"line":18,"column":0}}],"sources":{"../../../../src/internal/operators/finalize.ts":"import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"d5bdb898caef58b750bce9e9813f74c3","cacheData":{"env":{}}}