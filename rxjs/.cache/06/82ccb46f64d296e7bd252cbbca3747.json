{"id":"../node_modules/rxjs/dist/esm5/internal/operators/toArray.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\toArray.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\src\\internal\\operators\\toArray.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\Clips\\.browserslistrc","includedInParent":true,"mtime":1655288118437},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"./reduce","loc":{"line":1,"column":23,"index":23},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\toArray.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\reduce.js"},{"name":"../util/lift","loc":{"line":2,"column":24,"index":59},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\toArray.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toArray = toArray;\n\nvar _reduce = require(\"./reduce\");\n\nvar _lift = require(\"../util/lift\");\n\nvar arrReducer = function (arr, value) {\n  return arr.push(value), arr;\n};\n\nfunction toArray() {\n  return (0, _lift.operate)(function (source, subscriber) {\n    (0, _reduce.reduce)(arrReducer, [])(source).subscribe(subscriber);\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":12,"column":14}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":12,"column":17}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":12,"column":27}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":12,"column":30}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":32},"generated":{"line":12,"column":32}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":12,"column":37}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":42},"generated":{"line":12,"column":39}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":47},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":48},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":51},"generated":{"line":13,"column":12}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":52},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":48},"generated":{"line":13,"column":17}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":57},"generated":{"line":13,"column":18}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":48},"generated":{"line":13,"column":23}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":65},"generated":{"line":13,"column":26}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":47},"generated":{"line":13,"column":29}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":69},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":14,"column":1}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":16,"column":0}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":37,"column":16},"generated":{"line":16,"column":9}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":37,"column":23},"generated":{"line":16,"column":19}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":17,"column":2}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":17,"column":9}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":17,"column":13}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":17,"column":26}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":17},"generated":{"line":17,"column":28}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":18},"generated":{"line":17,"column":38}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":17},"generated":{"line":17,"column":44}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":26},"generated":{"line":17,"column":46}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":17},"generated":{"line":17,"column":56}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":36},"generated":{"line":17,"column":58}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":8}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":22}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":11},"generated":{"line":18,"column":24}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":34}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":23},"generated":{"line":18,"column":36}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":38}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":34},"generated":{"line":18,"column":40}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":46}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":42},"generated":{"line":18,"column":48}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":57}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":52},"generated":{"line":18,"column":58}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":18,"column":68}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":43,"column":3},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":19,"column":3}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":19,"column":4}},{"source":"../../../../src/internal/operators/toArray.ts","name":null,"original":{"line":44,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../../../../src/internal/operators/toArray.ts":"import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to escapulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"b56d89c8aa1cdd1b1a8de93b3875d962","cacheData":{"env":{}}}