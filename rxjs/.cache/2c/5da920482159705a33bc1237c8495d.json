{"id":"../node_modules/rxjs/dist/esm5/internal/operators/dematerialize.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\dematerialize.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\src\\internal\\operators\\dematerialize.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"../Notification","loc":{"line":1,"column":36,"index":36},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\dematerialize.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\Notification.js"},{"name":"../util/lift","loc":{"line":2,"column":24,"index":79},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\dematerialize.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":3,"column":41,"index":136},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\dematerialize.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dematerialize = dematerialize;\n\nvar _Notification = require(\"../Notification\");\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction dematerialize() {\n  return (0, _lift.operate)(function (source, subscriber) {\n    source.subscribe((0, _OperatorSubscriber.createOperatorSubscriber)(subscriber, function (notification) {\n      return (0, _Notification.observeNotification)(notification, subscriber);\n    }));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":14,"column":22}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":14,"column":25}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":15,"column":2}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":15,"column":9}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":15,"column":13}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":15,"column":26}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":17},"generated":{"line":15,"column":28}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":18},"generated":{"line":15,"column":38}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":17},"generated":{"line":15,"column":44}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":26},"generated":{"line":15,"column":46}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":17},"generated":{"line":15,"column":56}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":36},"generated":{"line":15,"column":58}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":10},"generated":{"line":16,"column":10}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":16,"column":11}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":21},"generated":{"line":16,"column":21}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":21},"generated":{"line":16,"column":25}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":21},"generated":{"line":16,"column":69}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":46},"generated":{"line":16,"column":71}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":21},"generated":{"line":16,"column":81}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":58},"generated":{"line":16,"column":83}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":59},"generated":{"line":16,"column":93}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":58},"generated":{"line":16,"column":105}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":71},"generated":{"line":16,"column":107}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":76},"generated":{"line":17,"column":6}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":76},"generated":{"line":17,"column":13}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":76},"generated":{"line":17,"column":17}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":76},"generated":{"line":17,"column":50}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":96},"generated":{"line":17,"column":52}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":76},"generated":{"line":17,"column":64}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":110},"generated":{"line":17,"column":66}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":76},"generated":{"line":17,"column":76}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":76},"generated":{"line":17,"column":77}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":121},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":21},"generated":{"line":18,"column":5}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":18,"column":6}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":57,"column":3},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":9},"generated":{"line":19,"column":3}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":19,"column":4}},{"source":"../../../../src/internal/operators/dematerialize.ts","name":null,"original":{"line":58,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../../../../src/internal/operators/dematerialize.ts":"import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"9915a7e3c5bf4047a2c12933b9104e31","cacheData":{"env":{}}}