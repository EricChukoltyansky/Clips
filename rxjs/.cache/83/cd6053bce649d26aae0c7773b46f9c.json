{"id":"../node_modules/rxjs/dist/esm5/internal/operators/concatWith.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\concatWith.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\src\\internal\\operators\\concatWith.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\package.json","includedInParent":true,"mtime":1657193624370},{"name":"C:\\Appleseeds\\angular-project\\Clips\\.browserslistrc","includedInParent":true,"mtime":1655288118437},{"name":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"tslib","loc":{"line":1,"column":38,"index":38},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\concatWith.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\tslib\\tslib.es6.js"},{"name":"./concat","loc":{"line":2,"column":23,"index":70},"parent":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\concatWith.js","resolved":"C:\\Appleseeds\\angular-project\\Clips\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\concat.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatWith = concatWith;\n\nvar _tslib = require(\"tslib\");\n\nvar _concat = require(\"./concat\");\n\nfunction concatWith() {\n  var otherSources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    otherSources[_i] = arguments[_i];\n  }\n\n  return _concat.concat.apply(void 0, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(otherSources)));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":44,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":44,"column":26},"generated":{"line":12,"column":22}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":13,"column":6}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":13,"column":18}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":13,"column":21}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":13,"column":23}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":7}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":11}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":13}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":16}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":19}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":24}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":33}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":34}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":42}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":15,"column":44}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":47},"generated":{"line":15,"column":48}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":17}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":19}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":23}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":32}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":33}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":35}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":16,"column":36}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":19,"column":2}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":19,"column":9}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":19,"column":23}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":24}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":19,"column":29}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":30}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":35}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":19,"column":36}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":38}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":42}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":62}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":64}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":66}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":68}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":72}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":85}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":19},"generated":{"line":19,"column":87}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":99}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":15},"generated":{"line":19,"column":100}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":19,"column":101}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":19,"column":102}},{"source":"../../../../src/internal/operators/concatWith.ts","name":null,"original":{"line":48,"column":1},"generated":{"line":20,"column":0}}],"sources":{"../../../../src/internal/operators/concatWith.ts":"import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { concat } from './concat';\n\n/**\n * Emits all of the values from the source observable, then, once it completes, subscribes\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\n * to the next one until it completes.\n *\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\n *\n * ## Example\n *\n * Listen for one mouse click, then listen for all mouse moves.\n *\n * ```ts\n * import { fromEvent, map, take, concatWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click');\n * const moves$ = fromEvent(document, 'mousemove');\n *\n * clicks$.pipe(\n *   map(() => 'click'),\n *   take(1),\n *   concatWith(\n *     moves$.pipe(\n *       map(() => 'move')\n *     )\n *   )\n * )\n * .subscribe(x => console.log(x));\n *\n * // 'click'\n * // 'move'\n * // 'move'\n * // 'move'\n * // ...\n * ```\n *\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\n * @return A function that returns an Observable that concatenates\n * subscriptions to the source and provided Observables subscribing to the next\n * only once the current subscription completes.\n */\nexport function concatWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return concat(...otherSources);\n}\n"},"lineCount":null}},"error":null,"hash":"2920611489c918caa6a62be55d8e6d0b","cacheData":{"env":{}}}