{"id":"../node_modules/rxjs/dist/esm5/internal/observable/iif.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\iif.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\src\\internal\\observable\\iif.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"./defer","loc":{"line":1,"column":22,"index":22},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\iif.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\defer.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.iif = iif;\n\nvar _defer = require(\"./defer\");\n\nfunction iif(condition, trueResult, falseResult) {\n  return (0, _defer.defer)(function () {\n    return condition() ? trueResult : falseResult;\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":16},"generated":{"line":10,"column":9}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":12}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":26},"generated":{"line":10,"column":13}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":22}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":52},"generated":{"line":10,"column":24}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":34}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":84},"generated":{"line":10,"column":36}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":10,"column":47}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":83,"column":115},"generated":{"line":10,"column":49}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":11,"column":2}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":11,"column":9}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":11,"column":13}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":11,"column":25}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":11,"column":27}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":15},"generated":{"line":11,"column":39}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":21},"generated":{"line":12,"column":4}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":22},"generated":{"line":12,"column":11}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":31},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":36},"generated":{"line":12,"column":25}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":31},"generated":{"line":12,"column":35}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":49},"generated":{"line":12,"column":38}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":21},"generated":{"line":12,"column":49}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":61},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":9},"generated":{"line":13,"column":3}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":84,"column":2},"generated":{"line":13,"column":4}},{"source":"../../../../src/internal/observable/iif.ts","name":null,"original":{"line":85,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../../../../src/internal/observable/iif.ts":"import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n"},"lineCount":null}},"error":null,"hash":"0809debe4948ee707281e2f3077a588c","cacheData":{"env":{}}}