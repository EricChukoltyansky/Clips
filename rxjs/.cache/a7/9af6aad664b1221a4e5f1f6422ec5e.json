{"id":"../node_modules/rxjs/dist/esm5/internal/util/isIterable.js","dependencies":[{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isIterable.js.map","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\src\\internal\\util\\isIterable.ts","includedInParent":true,"mtime":1647189212438},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\package.json","includedInParent":true,"mtime":1625261731954},{"name":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1647189212438},{"name":"../symbol/iterator","loc":{"line":1,"column":44,"index":44},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isIterable.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\symbol\\iterator.js"},{"name":"./isFunction","loc":{"line":2,"column":27,"index":93},"parent":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isIterable.js","resolved":"C:\\Appleseeds\\angular-project\\rxjs\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isIterable = isIterable;\n\nvar _iterator = require(\"../symbol/iterator\");\n\nvar _isFunction = require(\"./isFunction\");\n\nfunction isIterable(input) {\n  return (0, _isFunction.isFunction)(input === null || input === void 0 ? void 0 : input[_iterator.iterator]);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":5,"column":27},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":12,"column":25}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":5,"column":37},"generated":{"line":12,"column":27}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":13,"column":2}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":13,"column":13}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":13,"column":35}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":20},"generated":{"line":13,"column":37}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":42}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":47}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":20},"generated":{"line":13,"column":51}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":20},"generated":{"line":13,"column":55}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":60}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":65}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":70}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":20},"generated":{"line":13,"column":71}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":74}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":79}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":20},"generated":{"line":13,"column":80}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":20},"generated":{"line":13,"column":83}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":88}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":28},"generated":{"line":13,"column":89}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":25},"generated":{"line":13,"column":107}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":9},"generated":{"line":13,"column":108}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":13,"column":109}},{"source":"../../../../src/internal/util/isIterable.ts","name":null,"original":{"line":7,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../../../../src/internal/util/isIterable.ts":"import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n"},"lineCount":null}},"error":null,"hash":"ab18a85373b35d8c245c93c8a1d5dda4","cacheData":{"env":{}}}